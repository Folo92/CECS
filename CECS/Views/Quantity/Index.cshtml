@{
    ViewBag.Title = "Quantity";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>工程量信息管理</title>

    @Styles.Render("~/Content/easyui")
    @Styles.Render("~/Content/easyui_icon")
    @Styles.Render("~/Content/custom")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/easyui")
    @Scripts.Render("~/bundles/custom")

    <script type="text/javascript">
        var formID;//弹出表单的id

        $(function () {
            $("#addDiv").css("display", "none");
            $("#editDiv").css("display", "none");
            //将下拉框宽度设为自动
            $('.easyui-combobox').combobox({
                width: "auto"
            });
            //表格初始化加载数据
            loadData("");
        });
        function loadData(pars) {
            $('#tt').datagrid({
                url: '/Quantity/GetQuantityList',
                title: '工程量信息表',
                iconCls: '', //标题左边的图标
                width: 1600,
                height: 790,
                idField: 'QuantityID',//主键列的列名
                sortName: 'QuantityID', //排序字段
                loadMsg: '数据正在加载...',
                fitColumns: true, //列是否自适应
                nowrap: false,//是否不自动换行
                striped: true,//是否奇偶行使用不同背景色
                singleSelect: false,//是否单行选择
                rownumbers: true, //是否显示行号
                pagination: true,//是否显示分页工具栏
                pageSize: 20,//每页最大记录条数
                pageList: [20, 40, 60],//每页记录条数的列表，pageSize必须在此列表中
                pageNumber: 1,//当前页，默认的
                sortOrder: 'desc', //排序类型(本页数据)
                remoteSort: true, //是否从服务器给数据排序
                queryParams: pars,//往后台传递参数
                frozenColumns: [[//冻结的列，不会随横向滚动轴移动
                    { field: 'cbx', checkbox: true },
                ]],
                columns: [[
                    { title: '建筑ID', field: 'BuildingID', width: 80 },
                    { title: '钢筋量(kg)', field: 'TotalSteel', width: 100 },
                    { title: '砼量(m3)', field: 'TotalConcrete', width: 80 },
                    { title: '模板量(m2)', field: 'TotalShuttering', width: 100 },
                    { title: '单方含钢量(kg/m2)', field: 'UnitSteel', width: 120 },
                    { title: '单方砼量(m3/m2)', field: 'UnitConcrete', width: 110 },
                    { title: '单方模板量(m2/m2)', field: 'UnitShuttering', width: 120 },
                    { title: '钢筋单价(元/kg)', field: 'SteelPrice', width: 100 },
                    { title: '砼单价(元/m3)', field: 'ConcretePrice', width: 100 },
                    { title: '模板单价(元/m2)', field: 'ShutteringPrice', width: 100 },
                    {
                        title: '操作', field: 'QuantityID', width: 80, formatter: function (value, rec) {
                            var cmd = '';
                            cmd += '<a style="color:red" href="javascript:;" onclick="EditData(' + value + ');$(this).parent().click();return false;">编辑</a>';
                            cmd += '&nbsp;&nbsp;';
                            cmd += '<a style="color:red" href="javascript:;" onclick="CopyData(' + value + ');$(this).parent().click();return false;">复制</a>';
                            return cmd;
                        }
                    }
                ]],
                toolbar: [{
                    id: 'btnAdd',
                    text: '添加',
                    iconCls: 'icon-add',
                    handler: function () {
                        formID = "addForm";
                        addInfo();
                    }
                }, {
                    id: 'btnEidt',
                    text: '编辑',
                    iconCls: 'icon-edit',
                    handler: function () {
                        formID = "editForm";
                        showEditInfo();
                    }
                }, {
                    id: 'btnDelete',
                    text: '删除',
                    iconCls: 'icon-remove',
                    handler: function () {
                        deleteInfo();
                    }
                }, {
                    id: 'btnSearch',
                    text: '查询条件',
                    iconCls: 'icon-search',
                    handler: function () {
                        formID = "searchForm";
                        searchInfo();
                    }
                }, {
                    id: 'btnReload',
                    text: '重载所有',
                    iconCls: 'icon-reload',
                    handler: function () {
                        loadData("");
                    }
                }, {
                    id: 'btnClear',
                    text: '取消勾选',
                    iconCls: 'icon-clear',
                    handler: function () {
                        clearSelections();
                    }
                }],
            });
        }
        //清空选择
        function clearSelections() {
            $('#tt').datagrid('clearChecked') = 'none';
        }
        //查询数据
        function searchInfo() {
            $("#searchForm").form('clear');//清空表单数据
            $("#searchDiv").css("display", "block");
            $('#searchDiv').dialog({
                title: '查询数据',
                iconCls: 'icon-search',
                width: 750,
                height: 250,
                collapsible: true,
                maximizable: true,
                resizable: false,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                        //获取用户输入的搜索数据.
                        var pars = {
                            BuildingID: $("#searchForm #BuildingID").val()
                        };
                        //将获取的搜索的数据发送到服务端。
                        loadData(pars);
                        //$("#searchForm").submit();//提交表单
                        $('#searchDiv').dialog('close');
                    }
                }, {
                    text: '取消',
                    handler: function () {
                        $('#searchDiv').dialog('close');
                    }
                }]
            });
        }
        //删除数据
        function deleteInfo() {
            var rows = $('#tt').datagrid('getSelections');//获取所选择的行
            if (!rows || rows.length == 0) {
                $.messager.alert("提醒", "请选择要删除的记录!", "error");
                return;
            }
            $.messager.confirm("提示", "确定要删除数据吗", function (r) {
                if (r) {
                    //获取要删除的记录的ID值。
                    var rowsLength = rows.length;
                    var strId = "";
                    for (var i = 0; i < rowsLength; i++) {
                        strId = strId + rows[i].QuantityID + ",";//ID的字段名要对应
                    }
                    //去掉最后一个逗号。
                    strId = strId.substr(0, strId.length - 1);
                    //将获取的要删除的记录的ID值发送到服务端。
                    $.post("/Quantity/DeleteQuantity", { "strId": strId }, function (data) {
                        if (data == "ok") {
                            $('#tt').datagrid('reload');//加载表格不会跳到第一页。
                            //清除上次操作的历史的记录。
                            $('#tt').datagrid('clearSelections')
                        } else {
                            $.messager.alert("提醒", "删除记录失败!", "error");
                        }
                    });
                }
            });
        }

        //添加数据。$.messager.confirm()是异步实现的，所以要封装toAdd函数，放到回调函数里面去。
        function addInfo() {
            //判断一下用户是否选择了数据
            var rows = $('#tt').datagrid('getSelections');//获取所选择的行
            if (rows.length == 1) {
                $.messager.confirm('添加数据', '是否以选中的一行数据为模板？', function (r) {
                    if (r) {//将选中的数据查询出来，显示到文本框中。
                        var id = rows[0].QuantityID;//ID的字段名要对应
                        $.post("/Quantity/ShowEditInfo", { "id": id }, function (data) {
                            $("#addForm").form('load', data);
                        });
                    }
                    else {
                        $("#addForm").form('clear');//清空表单数据;
                    }
                    toAdd();//弹出添加数据对话框
                });
            } else {
                $("#addForm").form('clear');//清空表单数据
                toAdd();//弹出添加数据对话框
            }
        }
        //添加数据
        function toAdd() {
            $("#addDiv").css("display", "block");
            $('#addDiv').dialog({
                title: '添加数据',
                iconCls: 'icon-add',
                width: 750,
                height: 250,
                collapsible: true,
                maximizable: true,
                resizable: false,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                        validateInfo($("#addForm"));//表单校验
                        $("#addForm").submit();//提交表单
                    }
                }, {
                    text: '取消',
                    handler: function () {
                        $('#addDiv').dialog('close');
                    }
                }]
            });
        }
        //完成添加后调用该方法
        function afterAdd(data) {
            if (data == "ok") {
                $('#addDiv').dialog('close');
                $('#tt').datagrid('reload');//加载表格不会跳到第一页。
                $("#addForm").form('clear');//清空表单数据
                //$("#addForm input").val("");
                //$("#addForm select").val("");
            }
        }
        //表单校验
        function validateInfo(control) {
            control.validate({//表示对哪个form表单进行校验，获取form标签的id属性的值
                rules: {//表示验证规则
                    BuildingID: {
                        required: true
                    }
                },
                messages: {
                    BuildingID: "请输入建筑ID"
                }
            });
        }

        //展示一下要修改的数据.
        function showEditInfo() {
            //判断一下用户是否选择了要修改的数据
            var rows = $('#tt').datagrid('getSelections');//获取所选择的行
            if (rows.length < 1) {
                $.messager.alert("提示", "请选择一行要修改的数据", "error");
                return;
            }
            else if (rows.length > 1) {
                $.messager.alert("提示", "只能选择一行要修改的数据。当前选中了 " + rows.length + " 行", "error");
                return;
            }
            //将要修改的数据查询出来，显示到文本框中。
            var id = rows[0].QuantityID;//ID的字段名要对应
            $.post("/Quantity/ShowEditInfo", { "id": id }, function (data) {
                $("#editForm").form('load', data);
                //$.messager.show({ showType: 'slide', showSpeed: '600', msg: JSON.stringify(data), title: '提示' });
                //alert(JSON.stringify(data));
            });
            $("#editDiv").css("display", "block");
            $('#editDiv').dialog({
                title: '编辑数据',
                iconCls: 'icon-edit',
                width: 750,
                height: 250,
                collapsible: true,
                maximizable: true,
                resizable: false,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                        validateInfo($("#editForm"));//表单校验
                        $("#editForm").submit();//提交表单
                    }
                }, {
                    text: '取消',
                    handler: function () {
                        $('#editDiv').dialog('close');
                    }
                }]
            });
        }
        //更新以后调用该方法.
        function afterEdit(data) {
            if (data == "ok") {
                $('#editDiv').dialog('close');
                $('#tt').datagrid('reload');//加载表格不会跳到第一页。
            } else {
                $.messager.alert("提示", "修改的数据失败", "error");
            }
        }
        //将序列化成json格式后日期(毫秒数)转成日期格式
        function ChangeDateFormat(value) {
            var date = new Date(parseInt(value.replace("/Date(", "").replace(")/", ""), 10));
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            return date.getFullYear() + "-" + month + "-" + currentDate;
        }
    </script>
</head>

<body>
    <div>
        <!--主表-->
        <table id="tt" style="width:auto;" title="标题，可以使用代码进行初始化，也可以使用这种属性的方式" iconcls="icon-edit">
        </table>
    </div>
    <!---------------二级弹窗：选择列表---------------->
    <div id="select" class="easyui-dialog" title="建筑单体信息列表" style="width: 1520px; height: 840px;" modal="true" closed="true" resizable=true buttons="#select-buttons">
        <table id="tab_select" style="width:auto;" title="标题，可以使用代码进行初始化，也可以使用这种属性的方式" iconcls="icon-edit">
        </table>
        <div id="select-buttons">
            <a id="btn_select" href="javascript:;" class="easyui-linkbutton" iconCls="icon-ok">确定</a>&nbsp;
            <a href="javascript:;" class="easyui-linkbutton" onclick="$('#select').dialog('close');return false;">取消</a>
        </div>
    </div>
    <!---------------一级弹窗：添加数据---------------->
    <div id="addDiv" style="display: none;">
        @*必须引用jquery.unobtrusive-ajax.min.js，否则用Ajax.BeginForm返回数据时找不到本页面，自动跳转到操作方法(Action)名对应的页面（可能为空）*@
        @using (Ajax.BeginForm("AddQuantity", "Quantity", new { }, new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterAdd" }, new { id = "addForm" }))
        {
            @*@Html.Partial("form_input")*@
            Html.RenderPartial("form_input");
        }
    </div>
    <!---------------一级弹窗：修改数据---------------->
    <div id="editDiv" style="display: none;">
        @using (Ajax.BeginForm("EditQuantity", "Quantity", new { }, new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterEdit" }, new { id = "editForm" }))
        {
            @*@Html.Partial("form_input")*@
            Html.RenderPartial("form_input");
        }
    </div>
    <!---------------一级弹窗：查询数据---------------->
    <div id="searchDiv" style="display: none;">
        <form id="searchForm" name="searchForm" method="post">
            @{
                Html.RenderPartial("form_input");
            }
        </form>
    </div>
</body>
</html>

